name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Deno
      uses: denoland/setup-deno@v2
      with:
        deno-version: v2.4.0

    - name: Cache Deno dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/deno
        key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.lock') }}
        restore-keys: |
          ${{ runner.os }}-deno-

    - name: Build for Windows
      run: deno compile --allow-net=openrouter.ai --allow-read --allow-write --allow-env --output rosetta-translate.exe --target x86_64-pc-windows-msvc main.ts

    - name: Build for macOS ARM
      run: deno compile --allow-net=openrouter.ai --allow-read --allow-write --allow-env --output rosetta-translate-macos-arm --target aarch64-apple-darwin main.ts

    - name: Build for macOS Intel
      run: deno compile --allow-net=openrouter.ai --allow-read --allow-write --allow-env --output rosetta-translate-macos-intel --target x86_64-apple-darwin main.ts

    - name: Build for Linux
      run: deno compile --allow-net=openrouter.ai --allow-read --allow-write --allow-env --output rosetta-translate-linux --target x86_64-unknown-linux-gnu main.ts

    - name: Create release assets
      run: |
        mkdir -p dist
        mv rosetta-translate.exe dist/
        mv rosetta-translate-macos-arm dist/
        mv rosetta-translate-macos-intel dist/
        mv rosetta-translate-linux dist/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rosetta-translate-binaries
        path: dist/
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: rosetta-translate-binaries
        path: dist/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          Automated build from commit ${{ github.sha }}
          
          ## Binaries
          - **Windows**: `rosetta-translate.exe`
          - **macOS ARM**: `rosetta-translate-macos-arm`
          - **macOS Intel**: `rosetta-translate-macos-intel`
          - **Linux**: `rosetta-translate-linux`
        draft: false
        prerelease: false

    - name: Upload Windows Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/rosetta-translate.exe
        asset_name: rosetta-translate-windows.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS ARM Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/rosetta-translate-macos-arm
        asset_name: rosetta-translate-macos-arm
        asset_content_type: application/octet-stream

    - name: Upload macOS Intel Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/rosetta-translate-macos-intel
        asset_name: rosetta-translate-macos-intel
        asset_content_type: application/octet-stream

    - name: Upload Linux Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/rosetta-translate-linux
        asset_name: rosetta-translate-linux
        asset_content_type: application/octet-stream 