name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Deno
      uses: denoland/setup-deno@v2
      with:
        deno-version: v2.4.0

    - name: Cache Deno dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/deno
        key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.lock') }}
        restore-keys: |
          ${{ runner.os }}-deno-

    - name: Build for Windows
      run: deno compile --allow-net=openrouter.ai --allow-read --allow-write --allow-env --output rosetta-translate.exe --target x86_64-pc-windows-msvc main.ts

    - name: Build for macOS ARM
      run: deno compile --allow-net=openrouter.ai --allow-read --allow-write --allow-env --output rosetta-translate-macos-arm --target aarch64-apple-darwin main.ts

    - name: Build for macOS Intel
      run: deno compile --allow-net=openrouter.ai --allow-read --allow-write --allow-env --output rosetta-translate-macos-intel --target x86_64-apple-darwin main.ts

    - name: Build for Linux
      run: deno compile --allow-net=openrouter.ai --allow-read --allow-write --allow-env --output rosetta-translate-linux --target x86_64-unknown-linux-gnu main.ts

    - name: Create release assets
      run: |
        mkdir -p dist
        mv rosetta-translate.exe dist/
        mv rosetta-translate-macos-arm dist/
        mv rosetta-translate-macos-intel dist/
        mv rosetta-translate-linux dist/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rosetta-translate-binaries
        path: dist/
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      GH_TOKEN: ${{ github.token }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: rosetta-translate-binaries
        path: dist/

    - name: Create Release
      id: create_release
      run: |
        gh release create v${{ github.run_number }} \
          --title "Release v${{ github.run_number }}" \
          --notes "Automated build from commit ${{ github.sha }}
        
        ## Binaries
        - **Windows**: \`rosetta-translate.exe\`
        - **macOS ARM**: \`rosetta-translate-macos-arm\`
        - **macOS Intel**: \`rosetta-translate-macos-intel\`
        - **Linux**: \`rosetta-translate-linux\`" \
          --draft=false \
          --prerelease=false

    - name: Upload Windows Binary
      run: gh release upload v${{ github.run_number }} ./dist/rosetta-translate.exe --clobber

    - name: Upload macOS ARM Binary
      run: gh release upload v${{ github.run_number }} ./dist/rosetta-translate-macos-arm --clobber

    - name: Upload macOS Intel Binary
      run: gh release upload v${{ github.run_number }} ./dist/rosetta-translate-macos-intel --clobber

    - name: Upload Linux Binary
      run: gh release upload v${{ github.run_number }} ./dist/rosetta-translate-linux --clobber 